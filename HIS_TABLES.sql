CREATE OR REPLACE PACKAGE HIS_TABLES AS

  PROCEDURE CREATE_HIS_TABLES_SCRIPT;
END HIS_TABLES;
/
CREATE OR REPLACE PACKAGE BODY HIS_TABLES AS

  PROCEDURE CREATE_HIS_TABLES_SCRIPT AS

    V_CREATE_TABLE   VARCHAR2(4000);
    V_CREATE_SEQ     VARCHAR2(4000);
    V_CREATE_INS_TRG VARCHAR2(4000);

    V_OLD_TABLE_NAME VARCHAR2(30);
    V_OBJECT         VARCHAR2(30);
    V_SEQ_NAME       VARCHAR2(30);
    V_PREFIX         VARCHAR2(30) := 'HIS';

    I             NUMBER;
    V_ID_COL_NAME VARCHAR2(30);
    V_INS_COLS    VARCHAR(4000);
    V_INS_VALUES  VARCHAR2(4000);
    V_CHAR      VARCHAR2(5);

  BEGIN
    FOR T IN (SELECT T.* FROM USER_TABLES T WHERE T.TABLE_NAME NOT LIKE 'T_HIS_%' ORDER BY T.TABLE_NAME) LOOP
      SELECT SUBSTR(T.TABLE_NAME, 3) INTO V_OBJECT FROM DUAL;
      V_OLD_TABLE_NAME := 'T_' || V_PREFIX || '_' || V_OBJECT;
      DBMS_OUTPUT.PUT_LINE('--' || T.TABLE_NAME || ' -> ' || V_OLD_TABLE_NAME);
      V_SEQ_NAME := 'S_' || V_PREFIX || '_' || V_OBJECT;

      V_CREATE_SEQ := 'create sequence ' || V_SEQ_NAME || ' minvalue 1 start with 1 increment by 1 cache 20 order';

      V_CREATE_TABLE   := 'CREATE TABLE ' || V_OLD_TABLE_NAME || '(';
      V_CREATE_INS_TRG := 'CREATE OR REPLACE TRIGGER TRG_' || V_OBJECT || '_' || V_PREFIX ||
                          ' AFTER UPDATE OR DELETE ON ' || T.TABLE_NAME ||
                          ' REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW DECLARE V_ACTION VARCHAR2(1 CHAR); BEGIN ' ||
                          'IF UPDATING THEN V_ACTION:=''U''; ELSE V_ACTION:=''D''; END IF;' || ' INSERT INTO ' ||
                          V_OLD_TABLE_NAME || '(';
      I                := 0;
      FOR COLS IN (SELECT * FROM USER_TAB_COLS C WHERE C.TABLE_NAME = T.TABLE_NAME ORDER BY C.COLUMN_ID) LOOP
        IF I != 0 THEN
          V_CREATE_TABLE := V_CREATE_TABLE || ', ';
          V_INS_COLS     := V_INS_COLS || ', ';
          V_INS_VALUES   := V_INS_VALUES || ', ';
        ELSE
          V_ID_COL_NAME  := 'O' || COLS.COLUMN_NAME;
          V_CREATE_TABLE := V_CREATE_TABLE || V_ID_COL_NAME || ' NUMBER, ';
          V_INS_COLS     := V_ID_COL_NAME || ', ';
          V_INS_VALUES   := V_SEQ_NAME || '.NEXTVAL, ';
        END IF;

        V_CREATE_TABLE := V_CREATE_TABLE || COLS.COLUMN_NAME || ' ' || COLS.DATA_TYPE;
        V_INS_COLS     := V_INS_COLS || COLS.COLUMN_NAME;
        V_INS_VALUES   := V_INS_VALUES || ':OLD.' || COLS.COLUMN_NAME;

        IF COLS.DATA_TYPE NOT IN ('DATE', 'BLOB', 'CLOB', 'VARCHAR2') THEN
          V_CREATE_TABLE := V_CREATE_TABLE || '(' || COLS.DATA_LENGTH || ')';
        END IF;

        IF COLS.DATA_TYPE IN ('VARCHAR2') THEN
          SELECT decode(COLS.CHAR_USED, 'B', 'BYTE', 'C', 'CHAR') INTO V_CHAR FROM DUAL;
          V_CREATE_TABLE := V_CREATE_TABLE || '(' || COLS.CHAR_LENGTH || ' '  || V_CHAR || ')';
        END IF;
        I := I + 1;
      END LOOP; --cols
      V_CREATE_TABLE := V_CREATE_TABLE || ', CHANGE_DT DATE, ACTION_CD VARCHAR2(1 CHAR)';
      V_CREATE_TABLE := V_CREATE_TABLE || ')';

      V_INS_COLS       := V_INS_COLS || ', CHANGE_DT, ACTION_CD';
      V_INS_VALUES     := V_INS_VALUES || ', SYSDATE,  V_ACTION';
      V_CREATE_INS_TRG := V_CREATE_INS_TRG || V_INS_COLS || ') VALUES (' || V_INS_VALUES || '); END;';

      DBMS_OUTPUT.PUT_LINE(V_CREATE_SEQ);
      DBMS_OUTPUT.PUT_LINE('/');
      DBMS_OUTPUT.PUT_LINE(V_CREATE_TABLE);
      DBMS_OUTPUT.PUT_LINE('/');
      DBMS_OUTPUT.PUT_LINE(V_CREATE_INS_TRG);
      DBMS_OUTPUT.PUT_LINE('/');
      DBMS_OUTPUT.PUT_LINE('');
    END LOOP; -- tables
  END CREATE_HIS_TABLES_SCRIPT;

END HIS_TABLES;
/
